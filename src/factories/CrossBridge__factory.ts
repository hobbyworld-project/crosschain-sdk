/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CrossBridge, CrossBridgeInterface } from "../CrossBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transferID",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "enum ICrossBridge.TokenType",
        name: "tokenType",
        type: "uint8",
      },
    ],
    name: "TokensBridged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "attestationID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "convertToNative",
        type: "bool",
      },
    ],
    name: "TokensBridgedBack",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "convertToNative",
        type: "bool",
      },
    ],
    name: "TokensReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "attestationID",
        type: "bytes32",
      },
    ],
    name: "WrappedTokensReleased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "addDeployedToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenChain",
            type: "uint256",
          },
          {
            internalType: "enum ICrossBridge.TokenType",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "wrappedTokenAddress",
            type: "address",
          },
        ],
        internalType: "struct ITokenFactory.TokenAttestation",
        name: "_attestation",
        type: "tuple",
      },
    ],
    name: "attestToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "attestationID",
        type: "bytes32",
      },
    ],
    name: "attestedTokens",
    outputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenChain",
        type: "uint256",
      },
      {
        internalType: "enum ICrossBridge.TokenType",
        name: "tokenType",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "wrappedTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_dstChain",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_dstAddress",
        type: "address",
      },
    ],
    name: "bridgeTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_attestationID",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "_convertToNative",
        type: "bool",
      },
    ],
    name: "bridgeTokensBack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
    ],
    name: "changeRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wrappedToken",
        type: "address",
      },
    ],
    name: "getDeployedToken",
    outputs: [
      {
        internalType: "address",
        name: "deployedToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSupportedTokens",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isWrapped",
            type: "bool",
          },
        ],
        internalType: "struct ITokenFactory.TokenInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenChain",
        type: "uint256",
      },
    ],
    name: "getWrappedToken",
    outputs: [
      {
        internalType: "address",
        name: "wrappedToken",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenChain",
        type: "uint256",
      },
    ],
    name: "isWrappedTokenSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_convertToNative",
        type: "bool",
      },
    ],
    name: "releaseTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_attestationID",
        type: "bytes32",
      },
    ],
    name: "releaseWrappedTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenFactory",
    outputs: [
      {
        internalType: "contract ITokenFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tokenTransfers",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "srcChain",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "srcAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "dstChain",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "dstAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
        ],
        internalType: "struct ICrossBridge.TokenTransferBase",
        name: "tokenTransfer",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wrappedToken",
        type: "address",
      },
    ],
    name: "wrappedAttestedTokens",
    outputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenChain",
        type: "uint256",
      },
      {
        internalType: "enum ICrossBridge.TokenType",
        name: "tokenType",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "wrappedTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001eaf38038062001eaf8339810160408190526200003491620001ab565b33806200005c57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b62000067816200013e565b506001600160a01b038216620000c05760405162461bcd60e51b815260206004820152601760248201527f696e76616c69642072656c617965722061646472657373000000000000000000604482015260640162000053565b6001600160a01b038116620001185760405162461bcd60e51b815260206004820152601760248201527f696e76616c696420666163746f72792061646472657373000000000000000000604482015260640162000053565b600180546001600160a01b0319166001600160a01b0393841617905516608052620001e3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620001a657600080fd5b919050565b60008060408385031215620001bf57600080fd5b620001ca836200018e565b9150620001da602084016200018e565b90509250929050565b608051611c6a620002456000396000818161043f015281816104eb0152818161098c01528181610b1601528181610c4701528181610dc301528181610e4501528181610ee20152818161117c0152818161122901526112e50152611c6a6000f3fe6080604052600436106101185760003560e01c80639a67e7f9116100a0578063d3c7c2c711610064578063d3c7c2c7146103cc578063e2509931146103ee578063e77772fe1461042d578063edb3fdaa14610461578063f2fde38b1461048157600080fd5b80639a67e7f91461031c5780639e04c9721461033c578063b5f9bb421461035c578063c424d4f71461038c578063d148f8c5146103ac57600080fd5b8063715018a6116100e7578063715018a61461025e57806372a181f2146102735780637f7b0109146102935780638406c079146102c65780638da5cb5b146102fe57600080fd5b80631385c6701461012457806331ba16481461020957806333b15aad1461022b57806348d238291461023e57600080fd5b3661011f57005b600080fd5b34801561013057600080fd5b506101a961013f3660046113cf565b600260208181526000928352604092839020835160c08101855281548152600182015492810192909252918201546001600160a01b039081169382019390935260038201546060820152600482015483166080820152600582015490921660a08301526006015482565b604080518351815260208085015190820152838201516001600160a01b03908116928201929092526060808501519082015260808085015183169082015260a0938401519091169281019290925260c082015260e0015b60405180910390f35b34801561021557600080fd5b50610229610224366004611550565b6104a1565b005b61022961023936600461162f565b610555565b34801561024a57600080fd5b50610229610259366004611679565b610899565b34801561026a57600080fd5b50610229610919565b34801561027f57600080fd5b5061022961028e3660046116a4565b61092d565b34801561029f57600080fd5b506102b36102ae3660046113cf565b610b09565b6040516102009796959493929190611755565b3480156102d257600080fd5b506001546102e6906001600160a01b031681565b6040516001600160a01b039091168152602001610200565b34801561030a57600080fd5b506000546001600160a01b03166102e6565b34801561032857600080fd5b506102296103373660046117c0565b610bbe565b34801561034857600080fd5b506102b3610357366004611679565b610db6565b34801561036857600080fd5b5061037c6103773660046117f8565b610e1c565b6040519015158152602001610200565b34801561039857600080fd5b506102e66103a73660046117f8565b610eb9565b3480156103b857600080fd5b506102296103c7366004611824565b610f4f565b3480156103d857600080fd5b506103e1611178565b604051610200919061186c565b3480156103fa57600080fd5b5061040e610409366004611679565b611205565b604080516001600160a01b039093168352602083019190915201610200565b34801561043957600080fd5b506102e67f000000000000000000000000000000000000000000000000000000000000000081565b34801561046d57600080fd5b5061022961047c366004611679565b61129c565b34801561048d57600080fd5b5061022961049c366004611679565b611314565b6001546001600160a01b031633146104d45760405162461bcd60e51b81526004016104cb906118c6565b60405180910390fd5b60405163063742c960e31b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906331ba1648906105209084906004016118f5565b600060405180830381600087803b15801561053a57600080fd5b505af115801561054e573d6000803e3d6000fd5b5050505050565b6001600160a01b0384166105a35760405162461bcd60e51b8152602060048201526015602482015274696e76616c696420746f6b656e206164647265737360581b60448201526064016104cb565b826000036105c35760405162461bcd60e51b81526004016104cb90611986565b6001600160a01b03811661060f5760405162461bcd60e51b8152602060048201526013602482015272696e76616c696420647374206164647265737360681b60448201526064016104cb565b34156106bd578234146106645760405162461bcd60e51b815260206004820152601f60248201527f7472616e73666572206574682076616c756520697320696e636f72726563740060448201526064016104cb565b836001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561069f57600080fd5b505af11580156106b3573d6000803e3d6000fd5b5050505050610736565b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038516906323b872dd906064016020604051808303816000875af1158015610710573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073491906119b6565b505b6040805142602082015246918101919091526bffffffffffffffffffffffff1933606090811b8216818401526074830185905283811b8216609484015286901b1660a882015260bc810184905260009060dc0160408051601f1981840301815282825280516020918201206101008401835242848401908152466060808701919091523360808088019190915260a08088018b90526001600160a01b038a811660c08a01528d811660e08a01529388528786018c8152600086815260028089528982209a5180518c559889015160018c015598880151988a0180549987166001600160a01b03199a8b161790559387015160038a0155918601516004890180549186169189169190911790559490940151600587018054919093169516949094179055905160069093019290925590915060405182907f11a762c44e982fe76f4f9b9c028673684f53601407c960c08a6f4472419373e690600090a35050505050565b6108a1611352565b6001600160a01b0381166108f75760405162461bcd60e51b815260206004820152601760248201527f696e76616c69642072656c61796572206164647265737300000000000000000060448201526064016104cb565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b610921611352565b61092b600061137f565b565b8360000361094d5760405162461bcd60e51b81526004016104cb90611986565b6001600160a01b0383166109735760405162461bcd60e51b81526004016104cb906119d3565b604051637f7b010960e01b8152600481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637f7b010990602401600060405180830381865afa1580156109db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a039190810190611a4c565b9650506001600160a01b0386169450610a5b93505050505760405162461bcd60e51b81526020600482015260156024820152741a5b9d985b1a5908185d1d195cdd185d1a5bdb9251605a1b60448201526064016104cb565b604051632770a7eb60e21b8152336004820152602481018690526001600160a01b03821690639dc29fac90604401600060405180830381600087803b158015610aa357600080fd5b505af1158015610ab7573d6000803e3d6000fd5b5050505082846001600160a01b0316867fc60a7a6aa6e3e84a622e2510ec5f6fd3249f44965521e907aefb57278f47ba6f85604051610afa911515815260200190565b60405180910390a45050505050565b60008060008060608060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637f7b0109896040518263ffffffff1660e01b8152600401610b6291815260200190565b600060405180830381865afa158015610b7f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ba79190810190611a4c565b959e949d50929b5090995097509550909350915050565b6001546001600160a01b03163314610be85760405162461bcd60e51b81526004016104cb906118c6565b82600003610c085760405162461bcd60e51b81526004016104cb90611986565b6001600160a01b038216610c2e5760405162461bcd60e51b81526004016104cb906119d3565b604051637f7b010960e01b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637f7b010990602401600060405180830381865afa158015610c96573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cbe9190810190611a4c565b9650506001600160a01b0386169450610d1693505050505760405162461bcd60e51b81526020600482015260156024820152741a5b9d985b1a5908185d1d195cdd185d1a5bdb9251605a1b60448201526064016104cb565b6040516340c10f1960e01b81526001600160a01b038481166004830152602482018690528216906340c10f1990604401600060405180830381600087803b158015610d6057600080fd5b505af1158015610d74573d6000803e3d6000fd5b5050505081836001600160a01b0316857f7aebc2282a0784072e43f12d40afc658f82fda3d0e830865d50dd7b0196df7f160405160405180910390a450505050565b60008060008060608060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639e04c972896040518263ffffffff1660e01b8152600401610b6291906001600160a01b0391909116815260200190565b604051635afcdda160e11b81526001600160a01b038381166004830152602482018390526000917f00000000000000000000000000000000000000000000000000000000000000009091169063b5f9bb4290604401602060405180830381865afa158015610e8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb291906119b6565b9392505050565b60405163c424d4f760e01b81526001600160a01b038381166004830152602482018390526000917f00000000000000000000000000000000000000000000000000000000000000009091169063c424d4f790604401602060405180830381865afa158015610f2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb29190611b09565b6001546001600160a01b03163314610f795760405162461bcd60e51b81526004016104cb906118c6565b83600003610f995760405162461bcd60e51b81526004016104cb90611986565b6001600160a01b038316610fbf5760405162461bcd60e51b81526004016104cb906119d3565b6001600160a01b03821661100d5760405162461bcd60e51b8152602060048201526015602482015274696e76616c696420746f6b656e206164647265737360581b60448201526064016104cb565b8015156001036110ad57604051632e1a7d4d60e01b8152600481018590526001600160a01b03831690632e1a7d4d90602401600060405180830381600087803b15801561105957600080fd5b505af115801561106d573d6000803e3d6000fd5b50506040516001600160a01b038616925086156108fc02915086906000818181858888f193505050501580156110a7573d6000803e3d6000fd5b50611122565b60405163a9059cbb60e01b81526001600160a01b0384811660048301526024820186905283169063a9059cbb906044016020604051808303816000875af11580156110fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112091906119b6565b505b816001600160a01b0316836001600160a01b0316857f87e2a774a82d8722a7c461134b47145ccbbaba1736cc8c81f8d3667d6b1b0d508460405161116a911515815260200190565b60405180910390a450505050565b60607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d3c7c2c76040518163ffffffff1660e01b8152600401600060405180830381865afa1580156111d8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112009190810190611b26565b905090565b60405163e250993160e01b81526001600160a01b03828116600483015260009182917f0000000000000000000000000000000000000000000000000000000000000000169063e2509931906024016040805180830381865afa15801561126f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112939190611c06565b91509150915091565b6001546001600160a01b031633146112c65760405162461bcd60e51b81526004016104cb906118c6565b6040516376d9fed560e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063edb3fdaa90602401610520565b61131c611352565b6001600160a01b03811661134657604051631e4fbdf760e01b8152600060048201526024016104cb565b61134f8161137f565b50565b6000546001600160a01b0316331461092b5760405163118cdaa760e01b81523360048201526024016104cb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156113e157600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715611421576114216113e8565b60405290565b6040805190810167ffffffffffffffff81118282101715611421576114216113e8565b604051601f8201601f1916810167ffffffffffffffff81118282101715611473576114736113e8565b604052919050565b6001600160a01b038116811461134f57600080fd5b803561149b8161147b565b919050565b6002811061134f57600080fd5b803561149b816114a0565b60ff8116811461134f57600080fd5b803561149b816114b8565b600067ffffffffffffffff8211156114ec576114ec6113e8565b50601f01601f191660200190565b600082601f83011261150b57600080fd5b813561151e611519826114d2565b61144a565b81815284602083860101111561153357600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561156257600080fd5b813567ffffffffffffffff8082111561157a57600080fd5b9083019060e0828603121561158e57600080fd5b6115966113fe565b61159f83611490565b8152602083013560208201526115b7604084016114ad565b60408201526115c8606084016114c7565b60608201526080830135828111156115df57600080fd5b6115eb878286016114fa565b60808301525060a08301358281111561160357600080fd5b61160f878286016114fa565b60a08301525061162160c08401611490565b60c082015295945050505050565b6000806000806080858703121561164557600080fd5b84356116508161147b565b93506020850135925060408501359150606085013561166e8161147b565b939692955090935050565b60006020828403121561168b57600080fd5b8135610eb28161147b565b801515811461134f57600080fd5b600080600080608085870312156116ba57600080fd5b8435935060208501356116cc8161147b565b925060408501359150606085013561166e81611696565b6002811061170157634e487b7160e01b600052602160045260246000fd5b9052565b60005b83811015611720578181015183820152602001611708565b50506000910152565b60008151808452611741816020860160208601611705565b601f01601f19169290920160200192915050565b6001600160a01b0388811682526020820188905260009061177960408401896116e3565b60ff8716606084015260e0608084015261179660e0840187611729565b83810360a08501526117a88187611729565b92505080841660c08401525098975050505050505050565b6000806000606084860312156117d557600080fd5b8335925060208401356117e78161147b565b929592945050506040919091013590565b6000806040838503121561180b57600080fd5b82356118168161147b565b946020939093013593505050565b6000806000806080858703121561183a57600080fd5b84359350602085013561184c8161147b565b9250604085013561185c8161147b565b9150606085013561166e81611696565b602080825282518282018190526000919060409081850190868401855b828110156118b957815180516001600160a01b031685528601511515868501529284019290850190600101611889565b5091979650505050505050565b6020808252601590820152741bdb9b1e481c995b185e595c8818d85b8818d85b1b605a1b604082015260600190565b60208152600060018060a01b0380845116602084015260208401516040840152604084015161192760608501826116e3565b5060ff6060850151166080840152608084015160e060a085015261194f610100850182611729565b905060a0850151601f198583030160c086015261196c8282611729565b9150508160c08601511660e0850152809250505092915050565b602080825260169082015275616d6f756e742063616e206e6f74206265207a65726f60501b604082015260600190565b6000602082840312156119c857600080fd5b8151610eb281611696565b602080825260129082015271696e76616c696420746f206164647265737360701b604082015260600190565b600082601f830112611a1057600080fd5b8151611a1e611519826114d2565b818152846020838601011115611a3357600080fd5b611a44826020830160208701611705565b949350505050565b600080600080600080600060e0888a031215611a6757600080fd5b8751611a728161147b565b602089015160408a01519198509650611a8a816114a0565b6060890151909550611a9b816114b8565b608089015190945067ffffffffffffffff80821115611ab957600080fd5b611ac58b838c016119ff565b945060a08a0151915080821115611adb57600080fd5b50611ae88a828b016119ff565b92505060c0880151611af98161147b565b8091505092959891949750929550565b600060208284031215611b1b57600080fd5b8151610eb28161147b565b60006020808385031215611b3957600080fd5b825167ffffffffffffffff80821115611b5157600080fd5b818501915085601f830112611b6557600080fd5b815181811115611b7757611b776113e8565b611b85848260051b0161144a565b818152848101925060069190911b830184019087821115611ba557600080fd5b928401925b81841015611bfb5760408489031215611bc35760008081fd5b611bcb611427565b8451611bd68161147b565b815284860151611be581611696565b8187015283526040939093019291840191611baa565b979650505050505050565b60008060408385031215611c1957600080fd5b8251611c248161147b565b602093909301519294929350505056fea26469706673582212209fe57bdf946793c9b70f4f4b00488bf7daf58550d8b4e63b6f6e34590b07038564736f6c63430008140033";

type CrossBridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrossBridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrossBridge__factory extends ContractFactory {
  constructor(...args: CrossBridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _relayer: string,
    _factory: string,
    overrides?: Overrides & { from?: string }
  ): Promise<CrossBridge> {
    return super.deploy(
      _relayer,
      _factory,
      overrides || {}
    ) as Promise<CrossBridge>;
  }
  override getDeployTransaction(
    _relayer: string,
    _factory: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_relayer, _factory, overrides || {});
  }
  override attach(address: string): CrossBridge {
    return super.attach(address) as CrossBridge;
  }
  override connect(signer: Signer): CrossBridge__factory {
    return super.connect(signer) as CrossBridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrossBridgeInterface {
    return new utils.Interface(_abi) as CrossBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrossBridge {
    return new Contract(address, _abi, signerOrProvider) as CrossBridge;
  }
}
